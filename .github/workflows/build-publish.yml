name: Build

env:
  module_id: TwitchSongReQuest
  qmodName: TwitchSongReQuest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: QPM Action
        uses: Fernthedev/qpm-action@v1
        with:
          resolve_ndk: true
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true
          cache: true

          publish: false # qpm package

      - name: List Post Restore
        run: |
          echo includes:
          ls -la ${GITHUB_WORKSPACE}/extern/includes
          echo libs:
          ls -la ${GITHUB_WORKSPACE}/extern/libs

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}
          pwsh -Command ./scripts/build.ps1

      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo ::set-output name=NAME::"${files[0]}"

      - name: Upload non-debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.libname.outputs.NAME }}
          path: ./build/${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Check for release
        uses: actions-ecosystem/action-regex-match@v2
        id: commit-regex
        if: github.event_name != 'pull_request'
        with:
          text: ${{ github.event.head_commit.message }}
          regex: ^release.*?((v?)((?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)?)):?\W*(.*)
          flags: i

      - name: Rename debug
        if: github.event_name != 'pull_request' && steps.commit-regex.outputs.match != ''
        run: |
          mv ./build/debug/${{ steps.libname.outputs.NAME }} ./build/debug/debug_${{ steps.libname.outputs.NAME }}

      - name: Create qmod
        if: github.event_name != 'pull_request' && steps.commit-regex.outputs.match != ''
        run: |
          pwsh -Command ./scripts/createqmod.ps1 ${{env.qmodName}}

      - name: Upload to Release
        id: upload_file_release
        uses: softprops/action-gh-release@v2
        if: github.event_name != 'pull_request' && steps.commit-regex.outputs.match != ''
        with:
          name: ${{ steps.commit-regex.outputs.group4 }}
          tag_name: ${{ steps.commit-regex.outputs.group1 }}
          files: |
            ./build/${{ steps.libname.outputs.NAME }}
            ./build/debug/debug_${{ steps.libname.outputs.NAME }}
            ./${{ env.qmodName }}.qmod
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
